/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        au_lower: au_lower {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp U>,
                <&macro_release>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp A>;
        };

        au_upper: au_upper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp U>,
                <&macro_release>,
                <&kp LALT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        ou_lower: ou_lower {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp U>,
                <&macro_release>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp O>;
        };

        ou_upper: ou_upper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp U>,
                <&macro_release>,
                <&kp LALT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp O>,
                <&macro_release>,
                <&kp LSHFT>;
        };
    };

    behaviors {
        au: au {
            compatible = "zmk,behavior-mod-morph";
            label = "AU";
            bindings = <&au_lower>, <&au_upper>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        ou: ou {
            compatible = "zmk,behavior-mod-morph";
            label = "OU";
            bindings = <&ou_lower>, <&ou_upper>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        skot: sk_on_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "SK_ON_TAP";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
            hold-while-undecided-linger;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Base";
            bindings = <
&none        &kp Q  &kp W  &kp E   &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P      &kp LA(A)
&key_repeat  &kp A  &kp S  &kp D   &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &ou        &au
&none        &kp Z  &kp X  &kp C   &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp MINUS  &kp SQT
                           &kp F1  &mo 2  &kp LSHFT    &kp SPACE  &mo 1  &kp ENTER
            >;
        };

        sym_layer {
            display-name = "Sym";
            bindings = <
&none   &kp ESC    &kp LBKT   &kp LBRC   &kp LPAR   &kp TILDE    &kp CARET  &kp RPAR         &kp RBRC         &kp RBKT           &kp GRAVE          &none
&trans  &kp MINUS  &kp ASTRK  &kp EQUAL  &kp UNDER  &kp DLLR     &kp HASH   &skot LGUI LGUI  &skot LALT LALT  &skot LCTRL LCTRL  &skot LSHFT LSHFT  &none
&none   &kp PLUS   &kp PIPE   &kp AT     &kp SLASH  &kp PRCNT    &none      &kp BSLH         &kp AMPS         &kp QMARK          &kp EXCL           &none
                              &trans     &trans     &trans       &trans     &trans           &trans
            >;
        };

        nav_layer {
            display-name = "Nav";
            bindings = <
&none       &kp ESC            &kp LS(TAB)        &kp TAB          &kp LG(TAB)      &kp LG(GRAVE)       &none         &kp HOME     &kp UP         &kp END    &kp DEL        &bt BT_CLR
&trans      &skot LSHFT LSHFT  &skot LCTRL LCTRL  &skot LALT LALT  &skot LGUI LGUI  &kp SPACE           &kp CAPSLOCK  &kp LEFT     &kp DOWN       &kp RIGHT  &kp BACKSPACE  &bt BT_SEL 0
&kp C_MUTE  &kp C_VOL_DN       &kp C_VOL_UP       &kp C_PREV       &kp C_NEXT       &kp C_PLAY_PAUSE    &caps_word    &kp PAGE_UP  &kp PAGE_DOWN  &none      &kp LC(SPACE)  &bt BT_SEL 1
                                                  &trans           &trans           &trans              &trans        &trans       &trans
            >;
        };

        num_layer {
            display-name = "Num";
            bindings = <
&none   &kp N1             &kp N2             &kp N3           &kp N4           &kp N5    &kp N6  &kp N7           &kp N8           &kp N9             &kp N0             &tog 4
&trans  &skot LSHFT LSHFT  &skot LCTRL LCTRL  &skot LALT LALT  &skot LGUI LGUI  &none     &none   &skot LGUI LGUI  &skot LALT LALT  &skot LCTRL LCTRL  &skot LSHFT LSHFT  &none
&kp F1  &kp F2             &kp F3             &kp F4           &kp F5           &kp F6    &kp F7  &kp F8           &kp F9           &kp F10            &kp F11            &kp F12
                                              &trans           &trans           &trans    &trans  &trans           &trans
            >;
        };

        game_layer {
            display-name = "Game";
            bindings = <
&kp ESC  &kp TAB    &kp Q  &kp W     &kp E     &kp R        &kp I   &kp L   &kp M   &kp B   &none   &tog 4
&none    &kp LSHFT  &kp A  &kp S     &kp D     &kp F        &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &none
&none    &kp LCTRL  &kp Z  &kp X     &kp C     &kp V        &none   &none   &none   &none   &none   &none
                           &kp LALT  &kp LGUI  &kp SPACE    &none   &none   &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        num_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
